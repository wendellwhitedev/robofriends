{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAUeA,EARA,SAACC,GACf,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,YCUGC,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCmBOK,EAvBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKnB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCAGC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAY,MAAjB,SACC,uBACCA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCcDI,E,kDApBd,WAAYxB,GAAQ,IAAD,8BAClB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHO,E,qDAQpB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAIG,KAAKJ,MAAMC,SACP,6DAEDG,KAAK7B,MAAMK,a,GAjBS0B,aCiEbC,G,wDAzDd,aAAe,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEX,YAAae,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACZX,OAAQ,GACRK,YAAa,IAJD,E,qDAQf,WAAqB,IAAD,OACnBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEhB,OAAQ2B,S,oBASzC,WACC,MAAgCZ,KAAKJ,MAA7BX,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVuB,EAAiB5B,EAAO6B,QAAO,SAAAC,GACpC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS3B,EAAY0B,kBAiBtD,OAAQ/B,EAAOiC,OAGb,sBAAKrC,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAgBS,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAS4B,WAPvB,6C,GA1CgBX,cCGHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.662e679b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\n\t\t\t\t{ props.children }\n\t\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n\t/*if (true) {\n\t\tthrow new Error('NOOOOOOOOOOO!');\n\t}*/\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t    robots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email} \n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div className = 'pa2'>\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\ncomponentDidCatch(error, info) {\n\tthis.setState({ hasError: true })\n}\n\nrender() {\n\tif (this.state.hasError) {\n\t\treturn <h1>Oooooops.  That is not good</h1>\n\t}\n\treturn this.props.children\n}\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\ncomponentDidMount() {\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users }));\n}\n\nonSearchChange = (event) => {\n\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\n\nrender() {\n\tconst { robots, searchfield } = this.state;\n\tconst filteredRobots = robots.filter(robot => {\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t})\n\n\t\n/* if (this.state.robots.length === 0) {\n\treturn <h1> Loading</h1>\n} else {\n\treturn (\n\t<div className = 'tc'>\n\t<h1 className = 'f1'>Robofriends</h1>\n\tSearchBox searchChange={this.onSearchChange}/>)\n\tCardList robots={filteredRobots} />\n\t</div>);\n}\n*/\n\n\n\treturn !robots.length ?\n\t\t<h1>Loading</h1> :\n\t\t(\t\t\n\t\t\t<div className = 'tc'>\n\t\t\t\t<h1 className='f1' >RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CardList robots={ filteredRobots } />\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Scroll>\n\t\t\t</div>\t\n\t\t);\n\t}\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n/*import registerServiceWorker from './registerServiceWorker';*/\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n/*registerServiceWorker();*/"],"sourceRoot":""}